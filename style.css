@import url('https://fonts.googleapis.com/css2?family=Krona+One&family=Montserrat:wght@400;600&display=swap'); /*importando duas fontes do google Fonts */

*{
    margin:0; /*distância da margem até a tela// Devemos lembrar, que mesmo não declarando a propriedade margem no CSS, o próprio navegador adiciona valores para a margem padrão aos elementos na tela. */  
    padding:0;  /*distância dos elementos até a margem */
}
    body{
    background-color: black;
    color: #F6F6F6;
    height: 100vh;  /* altura da borda = 100 view port height, ou seja ocupará 100% da altura da tela do dispositivo */
    box-sizing: border-box; /* há alteração no cálculo padrão que conhecemos, fazendo com que o navegador passe a considerar a altura e largura do elemento contando o ´padding´ e o ´border´ do elemento. */ 
}   
.titulo-destaque{  /*aqui estou selecionando uma classe que eu criei na tag <strong> para individualizar esse trecho em específico fazendo assim com que as outras partes em que eu utilizei a tag não sejam afetadas por esses atributos CSS  */
    color:#22D4FD;
}
.apresentacao{   /* Classe da minha main que tem os conteúdos principais da minha página */
    margin:10% 20%; /* A porcentagem permite que criemos módulos que sempre vão se readaptar para ocupar a quantidade especificada. Por exemplo, se definirmos um elemento tendo um tamanho de 50%, independente do dispositivo em questão, esse módulo sempre ocupará metade do espaço que lhe cabe (caso esteja dentro de algum outro elemento). */ 
    display:flex;   /* relaciona o posicionamento de uma seção de elementos. Esta propriedade define um flex container; inline ou block dependendo dos valores passados. Coloca todos os elementos-filhos diretos num contexto Flex.*/
    align-items: center;
    justify-content: space-between;  /* os ítens são distribuídos de forma igual ao longo da linha; o primeiro ítem junto à borda inicial da linha, o último junto à borda final da linha. */
}
.apresentacao_conteudo{ /*largura da minha section de acordo com o figma*/
    width: 615px;
    display:flex;
    flex-direction: column; /*para que os elementos do meu container fiquem alinhados numa direção de coluna */ 
    gap: 40px; /*espaçamento entre os elementos na direção column // A propriedade CSS gap define os espaços (gutters (en-US)) entre as linhas e colunas. É uma propriedade shorthand para row-gap (en-US) e column-gap (en-US). */ 
}
.apresentacao_conteudo_titulo{ 
    font-size: 36px; /*tamanho da fonte do meu título */ 
    font-family: 'Krona One', sans-serif;  /*fonte importada do Google Fonts */  
}
.apresentacao_conteudo_paragrafo{
    font-size: 24px;
    font-family: 'Montserrat', sans-serif; /*Sans-serif para ficar com o aspecto arredondado */ 
}
.apresentacao_conteudo_links{
    display: flex;
    justify-content: space-between;
}
.apresentacao_conteudo_links_botoes{
    width:280px;
    background-color: #22D4FD;
    text-align: center;
    display:flex;
    justify-content: center;
    font-size: 24px;
    border-radius: 16px;
    padding: 21.5px 0;  /*aqui estou colcoando a distância dos elementos até a página, o primeiro valor representa a distância vertical e o segundo a distância na horizontal. */
    color:black;
    font-family: 'Montserrat', sans-serif; 
    font-weight: 600; /*peso da fonte */ 
    text-decoration: none; /*tirei o sublinhado do texto */ 

    /*aplicando o estilo hover nas minhas bordas */ 
    transition: 1s; 
    font-size: 24px;
    cursor: pointer;
}
.apresentacao_conteudo_links_botoes:hover{ /*propriedade que muda a borda quando eu passo o cursor do mouse por cima */ 
    transition: 1s; 
    font-size: 30px;
    cursor: pointer;
    
}




































/* Definição de classe: o atributo class permite ao CSS selecionar e acessar elementos específicos através dos seletores de classe */